


                Angular - Front End Development Framework 

                Basic Commands 

        1.create a project - ng new project-name 
        2.run an angular project - ng serve --open /ng s -o
        3. component creation - ng g c (component-name)
        4.Angular Services - ng g s (service-folder/service-name)
        5.Angular pipe - ng g p pipe-folder/pipe-name 


                Basic Buliding Blocks 


        1.Module -used to add 3rd party libraries 
        2.component -TO create html page
        3.selector - used to replace it html corresponding to the component 
        4.Angular Services - reusable code that can share between components 
        5.Asynchronus function - RxJs 
        6.Observable - 
                subscribe(call back)
        7.To get http methods 
        8.Dependency Injection - perform inside constructor 
              syntax: access specifier variable-name:class-name 
        9.Data Binding - data sharing inside a component 
                - one way Binding 
                    -component(ts) to view(html) 
                        -string Interpolation - {{variable-name}} (class variable can be shown in html)
                        -property Binding - [attribute]="property-name" (class variable can be shown in html uding attributes)
                    -view(html) to component(ts)
                        -event Binding -(event-name)="function-name ()"
                        -event Binding using $event argument - (event-name)="function-name($evvent)"
                - Two way Binding 
                    - Using ngModel:
                        -import FormsModule in appModule
                        -[{ngModel}]='property-name'
                             
        10.Directives - DOM Manipulation 
                -component Directives 
                -structural Directive - to add/remove html element based on a 
                                        condition or length of an array 
                        -*ngIf="condition"
                        -*ngFor="let variable-name of array-name"
        11.Pipe - transform user input to another format 
        


        Contact Management System 

        1.create an angular project 
        2.install bootstrap and fontawesome 
        3.paste cdn link fontawesome 
        4.configure bootstrap and fontawesome in angular.json
        5.configure google fonts 
        6.create component needed for the project 
                contactManager- display all contacts and manage them
                addContact- add new contact
                updateContact- update existing contact 
                viewContact- view a particular contact
                pageNotfound- to displat page not found 
                navbar- palce its selector inside root component html page 
        7.Set up the path for each component that we need to display in webpage 
                Inside app-routing.module.ts routes array 
                use router-outlet selector inside appComponent.html page 
                to view the request component 
        8. Design html page of each components 
        9. Set up the server api 
                -create server folder inside the project 
                -create an db.json file 
                -open cmd from server folder 
                        -create package.json file -npm init 
                        -install json-server inside server folder 
                        -update package.json file ,scripts as 
                            "start": "json-server --watch db.json --port 3000"
                        -to run server use npm start 
        10. Create model for contacts and group 
                -create model folder in src folder 
                -create myContact.ts file 
                -create myGroup.ts 
        11. Create an angualar service for making api call
        12. To get http methods -GET,POST,PUT,PATCH and DELETE
                -Import HttpClientModule in app.module.ts 
                -Dependency Inject httpClient in api service to file 